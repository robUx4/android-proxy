buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    maven { url 'http://www.bugsense.com/gradle/' }
    maven { url 'http://download.crashlytics.com/maven' }
}

task printProps << {
    println 'Printing properties'
    println android_keystore
    println android_keystore_password
    println android_key_alias
    println android_key_password
}

android {

    compileSdkVersion 19
    buildToolsVersion '20.0.0'

//    Scheme for version codes: ##@@$$$%% , using:
//    ##   - the first two digits for the API Level,
//    @@   - the second and third digits for the minimum and maximum screen size
//           (1 - 4 indicating each of the four sizes) or to denote the texture formats
//
///          the last five digits are for the app version:
//    $$$  - three digits for major version (the user will see only the major version)
///   %%   - two digits for minor version

    defaultConfig {

        minSdkVersion 15
        targetSdkVersion 19
        versionCode 130021514
        versionName "2.15"

        applicationId "com.lechucksoftware.proxy.proxysettings"
    }

    signingConfigs {

        release

    }

    buildTypes {

        release {

            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            debuggable false

            //buildConfigField "String", "BUGSENSE_LICENSE", "\"" + bugsense_release + "\""
            //buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + analytics_track_id_release + "\""

            signingConfig project.hasProperty('android_keystore') ? signingConfigs.release : signingConfigs.debug

            applicationVariants.all { variant ->
                def file = variant.outputFile
                variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionCode + ".apk"))
            }
        }

        debug {

            runProguard false
            debuggable true

            versionNameSuffix "-DEBUG"

            //buildConfigField "String", "BUGSENSE_LICENSE", "\"" + bugsense_debug + "\""
            //buildConfigField "String", "ANALYTICS_TRACK_ID", "\"" + analytics_track_id_debug + "\""
        }

        CI {

            debuggable true
            runProguard false

            versionNameSuffix "-CI"

            buildConfigField "String", "BUGSENSE_LICENSE", 'null'
            buildConfigField "String", "ANALYTICS_TRACK_ID", 'null'
            ext.enableCrashlytics = false
        }
    }

    if (project.hasProperty('android_keystore') &&
            project.hasProperty('android_keystore_password') &&
            project.hasProperty('android_key_alias') &&
            project.hasProperty('android_key_password')) {

        println 'Signing Configurations succesfully found'
        android.signingConfigs.release.storeFile = file(android_keystore)
        android.signingConfigs.release.storePassword = android_keystore_password
        android.signingConfigs.release.keyAlias = android_key_alias
        android.signingConfigs.release.keyPassword = android_key_password
    } else {
        println 'Signing Configurations not found'
        buildTypes.release.signingConfig = null
    }

    sourceSets {

        main {

            java {
                srcDir 'src'
                exclude '**/excluded_from_build/**'
                exclude '**/ui/help/**'
            }

        }
    }
}

dependencies {
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.google.android.gms:play-services:+'

// https://github.com/tony19/logback-android
//    compile 'org.slf4j:slf4j-api:1.7.1'
//    compile 'com.github.tony19:logback-android-core:1.0.7-1'
//    compile 'com.github.tony19:logback-android-classic:1.0.7-1'

    compile 'com.bugsense.trace:bugsense:3.6.1'

//    compile 'de.keyboardsurfer.android.widget:crouton:1.8.4'
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile files('libs/google-play-services.jar')
    compile project(':android-proxy-library')
}
